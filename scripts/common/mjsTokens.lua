local mjsTokens = {
    tokens = mj:enum {
        "pos",
        "difficulty",
        "complete",
        "fractionComplete",
        "timer",
        "fractionDegraded",
        "degradeReferenceTime",
        "short",
        "long",
        "incrementing",
        "needs",
        "tribeID",
        "statusEffects",
        "traitTypeIndex",
        "moods",
        "orderTypeIndex",
        "eyeColorGene",
        "skinColorFraction",
        "objects",
        "countsByObjectType",
        "actionState",
        "goalPos",
        "pathNodeIndex",
        "orderQueue",
        "ageFraction",
        "progressIndex",
        "actionModifiers",
        "orderIDCounter",
        "skillState",
        "skillPriorities",
        "lifeStageIndex",
        "traits",
        "isFemale",
        "name",
        "objectID",
        "sapienOrderID",
        "sapienID",
        "activeOrder",
        "goalPosOrNil",
        "pathInfo",
        "proximityType",
        "sequenceTypeIndex",
        "inaccessible",
        "path",
        "valid",
        "startPos",
        "nodes",
        "goalObjectIDOrNil",
        "inventories",
        "mood",
        "bond",
        "seen",
        "progressionIndex",
        "covered",
        "anchors",
        "anchorState",
        "currentAnchorTypeIndex",
        "opposite",
        "actionStateTimer",
        "currentAnchorObjectID",
        "constructionConstructableTypeIndex",
        "constructionObjects",
        "pregnancyOrBabyTimer",
        "planObjectID",
        "playerPos",
        "playerDir",
        "playerHeightAboveTerrain",
        "objectTypeIndex",
        "hairColorGene",
        "version",
        "homePos",
        "lookAtPoint",
        "planTypeIndex",
        "seatObjectTypeIndex",
        "seatObjectID",
        "exitTimePassed",
        "familyRelationshipType",
        "walkStartTime",
        "lookAtObjectID",
        "logisticsRouteID",
        "logisticsInfo",
        "lastDestinationObjectID",
        "lastDestinationIndex",
        "canComplete",
        "planID",
        "requiredSkill",
        "warmingTimer",
        "uniqueID",
        "inventory",
        "orderContext",
        "removalCallbackTimes",
        "scale",
        "rotation",
        "point",
        "vertID",
        "context",
        "planStates",
        "routeID",
        "radius2",
        "objectLocalOffsetMeters",
        "walkSpeed",
        "exitPos",
        "groupID",
        "restNearObjectID",
        "preventGrassAndSnowVertIDs",
        "seatNodeIndex",
        "destinations",
        "returnToStartEnabled",
        "maxSapiens",
        "planAnchorAdded",
        "disabledDueToOrderLimit",
        "fuelState",
        "requiredCount",
        "idCounter",
        "multitaskState",
        "seatNodes",
        "attachedToTerrain",
        "nodeTypeNodeSubIndex",
        "nodePos",
        "decalBlockers",
        "sourceObjectID",
        "resourceTypeIndex",
        "pregnant",
        "coolingTimer",
        "relationships",
        "ownershipState",
        "conversations",
        "nomad",
        "tribeBehaviorTypeIndex",
        "isLit",
        "requiresMaintenance",
        "isStuck",
        "inaccessibleCount",
        "removeRouteWhenComplete",
        "requiresMaintenanceByTribe",
        "settingsByTribe",
        "industryTypeIndex",
        "population",
        "destinationTypeIndex",
        "spawnSapienCount",
        "destinationID",
        "faceID",
        "normalizedPos",
        "plantTime",
        "soilQuality",
        "restrictedResourceObjectTypes",
        "tooDistant",
        "afterAction",
        "missingResources",
        "missingCount",
        "buildSequenceIndex",
        "missingSkill",
        "optionalFallbackSkill",
        "contentsStorageTypeIndex",
        "restrictStorageTypeIndex",
        "duration",
        "shouldMaintainSetQuantity",
        "restrictedDirections",
        "maintainQuantityOutputResourceCounts",
        "requiresStorageObjectTypeIndex",
        "nearbyCount",
        "matureTime",
        "restrictedObjectTypeIndexes",
    }
}

if #mjsTokens.tokens > 255 then
    mj:error("Too many tokens")
    error()
end

return mjsTokens